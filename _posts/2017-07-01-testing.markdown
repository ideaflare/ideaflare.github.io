---
published: false
title: Testing
layout: post
tags: [test, refactoring]
categories: [code, design]
---
# Why test

Most important thing about code is that it works as expected. Even though things like [asserting the length of collections](https://www.idris-lang.org) could be checked at compile time, testing is the only sure way to really validate assumptions.

# Testing enables you to focus on the change you make.
## Refactoring safety net
Helps to make sure that expected functionality of the code is still valid, and enables you to refactor freely
## Focus on feature
Tests allows you to think only about the new functionality, without having to consider the entire rube goldberg machine at once.
## Collaboration
You might not know what code is calling what, especially if multiple people are modifying the code base all the time.



### Interesting spin on the testing pyramid:
2 birds:
 * Easy to maintain tests, mostly unit.
 * Great real-time monitoring for useful information radiators
 
By using monitoring as a testing tool in a staged deployment dev->test->prod release process.
If you have a great monitoring system, you can spend less effort on hard-to-maintain integration & systems tests.


